if game.PlaceId == 2753915549 then
    Sea1 = true
elseif game.PlaceId == 4442272183 then
    Sea2 = true
elseif game.PlaceId == 7449423635 then
    Sea3 = true
else
    game:GetService("Players").LocalPlayer:Kick("Do not Support, Please wait...")
end

function topos(Pos)
    Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if Distance < 25 then
        Speed = 5000
    elseif Distance < 50 then
        Speed = 2000
    elseif Distance < 150 then
        Speed = 800
    elseif Distance < 250 then
        Speed = 600
    elseif Distance < 500 then
        Speed = 300
    elseif Distance < 750 then
        Speed = 275
    elseif Distance >= 1000 then
        Speed = 250
    end
    game:GetService("TweenService"):Create(
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
        TweenInfo.new(Distance / Speed, Enum.EasingStyle.Linear),
        {CFrame = Pos}
    ):Play()
end

getgenv().ToTargets = function(p)
    task.spawn(
        function()
            pcall(
                function()
                    if game:GetService("Players").LocalPlayer:DistanceFromCharacter(p.Position) <= 250 then
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = p
                    elseif not game.Players.LocalPlayer.Character:FindFirstChild("Root") then
                        local K = Instance.new("Part", game.Players.LocalPlayer.Character)
                        K.Size = Vector3.new(1, 0.5, 1)
                        K.Name = "Root"
                        K.Anchored = true
                        K.Transparency = 1
                        K.CanCollide = false
                        K.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0)
                    end
                    local U = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - p.Position).Magnitude
                    local z = game:service("TweenService")
                    local B =
                        TweenInfo.new(
                        (p.Position - game.Players.LocalPlayer.Character.Root.Position).Magnitude / 300,
                        Enum.EasingStyle.Linear
                    )
                    local S, g =
                        pcall(
                        function()
                            local q = z:Create(game.Players.LocalPlayer.Character.Root, B, {CFrame = p})
                            q:Play()
                        end
                    )
                    if not S then
                        return g
                    end
                    game.Players.LocalPlayer.Character.Root.CFrame =
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    if S and game.Players.LocalPlayer.Character:FindFirstChild("Root") then
                        pcall(
                            function()
                                if
                                    (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - p.Position).Magnitude >=
                                        20
                                 then
                                    spawn(
                                        function()
                                            pcall(
                                                function()
                                                    if
                                                        (game.Players.LocalPlayer.Character.Root.Position -
                                                            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >
                                                            150
                                                     then
                                                        game.Players.LocalPlayer.Character.Root.CFrame =
                                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                                                    else
                                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                                            game.Players.LocalPlayer.Character.Root.CFrame
                                                    end
                                                end
                                            )
                                        end
                                    )
                                elseif
                                    (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - p.Position).Magnitude >=
                                        10 and
                                        (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - p.Position).Magnitude <
                                            20
                                 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p
                                elseif
                                    (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - p.Position).Magnitude <
                                        10
                                 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p
                                end
                            end
                        )
                    end
                end
            )
        end
    )
end

Type = 1
spawn(
    function()
        while wait(.1) do
            if Type == 1 then
                Pos = CFrame.new(0, PosY, 0)
            elseif Type == 2 then
                Pos = CFrame.new(0, PosY, -0)
            elseif Type == 3 then
                Pos = CFrame.new(0, PosY, 0)
            elseif Type == 4 then
                Pos = CFrame.new(0, PosY, 0)
            elseif Type == 5 then
                Pos = CFrame.new(-0, PosY, 0)
            elseif Type == 6 then
                Pos = CFrame.new(0, 0, 0)
            end
        end
    end
)

spawn(
    function()
        while wait(.1) do
            Type = 1
            wait(0.5)
            Type = 2
            wait(0.5)
            Type = 3
            wait(0.5)
            Type = 4
            wait(0.5)
            Type = 5
            wait(0.5)
        end
    end
)

function EquipWeapon(ToolSe)
    if not _G.NotAutoEquip then
        if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
            Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
            wait(.1)
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Tool)
        end
    end
end

function TurnOnBuso()
    if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
    end
end

spawn(
    function()
        game:GetService("RunService").Heartbeat:Connect(
            function()
                if
                    _G.TeleportToKitsune or _G.OneClick or _G.AutoFactoryByMe or _G.TeleportEmberTemplate or
                        _G.KillTerrorShark or
                        _G.KillShark or
                        _G.KillFishCrew or
                        _G.KillPiranha or
                        _G.Zone6 or
                        _G.Farm or
                        _G.AutoCandy or
                        _G.AutoVampire or
                        AutoFarmChest or
                        _G.AutoAdvanceDungeon or
                        _G.AutoDoughtBoss or
                        _G.Auto_DungeonMobAura or
                        _G.AutoFarmChest or
                        _G.AutoFactory or
                        _G.AutoFarmBossHallow or
                        _G.AutoFarmSwanGlasses or
                        _G.AutoLongSword or
                        _G.AutoBlackSpikeycoat or
                        _G.AutoElectricClaw or
                        _G.AutoFarmGunMastery or
                        _G.AutoHolyTorch or
                        _G.AutoLawRaid or
                        _G.AutoFarmBoss or
                        _G.AutoTwinHooks or
                        _G.AutoOpenSwanDoor or
                        _G.AutoDragon_Trident or
                        _G.AutoSaber or
                        _G.NOCLIP or
                        _G.AutoFarmFruitMastery or
                        _G.AutoFarmGunMastery or
                        _G.TeleportIsland or
                        _G.Auto_EvoRace or
                        _G.AutoFarmAllMsBypassType or
                        _G.AutoObservationv2 or
                        _G.AutoMusketeerHat or
                        _G.AutoEctoplasm or
                        _G.AutoRengoku or
                        _G.Auto_Rainbow_Haki or
                        _G.AutoObservation or
                        _G.AutoDarkDagger or
                        _G.Safe_Mode or
                        _G.MasteryFruit or
                        _G.AutoBudySword or
                        _G.AutoOderSword or
                        _G.AutoBounty or
                        _G.AutoAllBoss or
                        _G.Auto_Bounty or
                        _G.AutoSharkman or
                        _G.Auto_Mastery_Fruit or
                        _G.Auto_Mastery_Gun or
                        _G.Auto_Dungeon or
                        _G.Auto_Cavender or
                        _G.Auto_Pole or
                        _G.Auto_Kill_Ply or
                        _G.Auto_Factory or
                        _G.AutoSecondSea or
                        _G.TeleportPly or
                        _G.AutoBartilo or
                        _G.Auto_DarkBoss or
                        _G.GrabChest or
                        _G.AutoFarmBounty or
                        _G.Holy_Torch or
                        _G.AutoFarm or
                        _G.Clip or
                        _G.AutoElitehunter or
                        _G.AutoThirdSea or
                        _G.Auto_Bone or
                        _G.Autoheart or
                        _G.Autodoughking or
                        _G.AutoFarmMaterial or
                        _G.AutoNevaSoulGuitar or
                        _G.Auto_Dragon_Trident or
                        _G.Autotushita or
                        _G.d or
                        _G.Autowaden or
                        _G.Autogay or
                        _G.Autopole or
                        _G.Autosaw or
                        _G.AutoObservationHakiV2 or
                        _G.AutoFarmNearest or
                        AutoFarmChest or
                        _G.AutoCarvender or
                        _G.AutoTwinHook or
                        AutoMobAura or
                        _G.Tweenfruit or
                        _G.AutoKai or
                        _G.TeleportNPC or
                        _G.Leather or
                        _G.Auto_Wing or
                        _G.Umm or
                        _G.Makori_gay or
                        Radioactive or
                        Fish or
                        Gunpowder or
                        Dragon_Scale or
                        Cocoafarm or
                        Scrap or
                        MiniHee or
                        _G.AutoFarmSeabaest or
                        Auto_Cursed_Dual_Katana or
                        _G.AutoFarmMob or
                        _G.AutoMysticIsland or
                        _G.AutoFarmDungeon or
                        _G.AutoRaidPirate or
                        _G.AutoQuestRace or
                        _G.TweenMGear or
                        getgenv().AutoFarm or
                        _G.AutoPlayerHunter or
                        _G.AutoFactory or
                        Grab_Chest or
                        _G.Namfon or
                        _G.AutoSwordMastery or
                        _G.AutoSeaBest or
                        _G.AutoKillTial or
                        _G.AutoKillElite or
                        _G.Auto_Saber or
                        _G.Position_Spawn or
                        _G.Farmfast or
                        _G.AutoRace or
                        _G.AutoTrial or
                        _G.KillV4 or
                        _G.RaidPirate
                 then
                    if not game:GetService("Workspace"):FindFirstChild("LOL") then
                        local LOL = Instance.new("Part")
                        LOL.Name = "LOL"
                        LOL.Parent = game.Workspace
                        LOL.Anchored = true
                        LOL.Transparency = 1
                        LOL.Size = Vector3.new(30, -0.5, 30)
                    elseif game:GetService("Workspace"):FindFirstChild("LOL") then
                        game.Workspace["LOL"].CFrame =
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.6, 0)
                    end
                else
                    if game:GetService("Workspace"):FindFirstChild("LOL") then
                        game:GetService("Workspace"):FindFirstChild("LOL"):Destroy()
                    end
                end
            end
        )
    end
)

spawn(
    function()
        while wait() do
            if
                _G.TeleportToKitsune or _G.OneClick or _G.AutoFactoryByMe or _G.TeleportEmberTemplate or
                    _G.KillTerrorShark or
                    _G.KillShark or
                    _G.KillFishCrew or
                    _G.KillPiranha or
                    _G.Zone6 or
                    _G.AutoCandy or
                    _G.Farm or
                    _G.AutoVampire or
                    AutoFarmChest or
                    _G.AutoAdvanceDungeon or
                    _G.AutoDoughtBoss or
                    _G.Auto_DungeonMobAura or
                    _G.AutoFarmChest or
                    _G.AutoFactory or
                    _G.AutoFarmBossHallow or
                    _G.AutoFarmSwanGlasses or
                    _G.AutoLongSword or
                    _G.AutoBlackSpikeycoat or
                    _G.AutoElectricClaw or
                    _G.AutoFarmGunMastery or
                    _G.AutoHolyTorch or
                    _G.AutoLawRaid or
                    _G.AutoFarmBoss or
                    _G.AutoTwinHooks or
                    _G.AutoOpenSwanDoor or
                    _G.AutoDragon_Trident or
                    _G.AutoSaber or
                    _G.AutoFarmFruitMastery or
                    _G.AutoFarmGunMastery or
                    _G.TeleportIsland or
                    _G.Auto_EvoRace or
                    _G.AutoFarmAllMsBypassType or
                    _G.AutoObservationv2 or
                    _G.AutoMusketeerHat or
                    _G.AutoEctoplasm or
                    _G.AutoRengoku or
                    _G.Auto_Rainbow_Haki or
                    _G.AutoObservation or
                    _G.AutoDarkDagger or
                    _G.Safe_Mode or
                    _G.MasteryFruit or
                    _G.AutoBudySword or
                    _G.AutoOderSword or
                    _G.AutoBounty or
                    _G.AutoAllBoss or
                    _G.Auto_Bounty or
                    _G.AutoSharkman or
                    _G.Auto_Mastery_Fruit or
                    _G.Auto_Mastery_Gun or
                    _G.Auto_Dungeon or
                    _G.Auto_Cavender or
                    _G.Auto_Pole or
                    _G.Auto_Kill_Ply or
                    _G.Auto_Factory or
                    _G.AutoSecondSea or
                    _G.TeleportPly or
                    _G.AutoBartilo or
                    _G.Auto_DarkBoss or
                    _G.GrabChest or
                    _G.AutoFarmBounty or
                    _G.Holy_Torch or
                    _G.AutoFarm or
                    _G.Clip or
                    FarmBoss or
                    _G.AutoElitehunter or
                    _G.AutoThirdSea or
                    _G.Auto_Bone or
                    _G.Autoheart or
                    _G.Autodoughking or
                    _G.AutoFarmMaterial or
                    _G.AutoNevaSoulGuitar or
                    _G.Auto_Dragon_Trident or
                    _G.Autotushita or
                    _G.d or
                    _G.Autowaden or
                    _G.Autogay or
                    _G.Autopole or
                    _G.Autosaw or
                    _G.AutoObservationHakiV2 or
                    _G.AutoFarmNearest or
                    AutoFarmChest or
                    _G.AutoCarvender or
                    _G.AutoTwinHook or
                    AutoMobAura or
                    _G.Tweenfruit or
                    _G.TeleportNPC or
                    _G.Leather or
                    _G.Auto_Wing or
                    _G.Umm or
                    _G.Makori_gay or
                    Radioactive or
                    Fish or
                    Gunpowder or
                    Dragon_Scale or
                    Cocoafarm or
                    Scrap or
                    MiniHee or
                    _G.AutoFarmSeabaest or
                    Auto_Cursed_Dual_Katana or
                    _G.AutoFarmMob or
                    _G.AutoMysticIsland or
                    _G.AutoFarmDungeon or
                    _G.AutoRaidPirate or
                    _G.AutoQuestRace or
                    _G.TweenMGear or
                    getgenv().AutoFarm or
                    _G.AutoPlayerHunter or
                    _G.AutoFactory or
                    Grab_Chest or
                    _G.Namfon or
                    _G.AutoSwordMastery or
                    _G.Auto_Seabest or
                    _G.AutoSeaBest or
                    _G.AutoKillElite or
                    _G.AutoKillTial or
                    _G.Auto_Saber or
                    _G.Position_Spawn or
                    _G.Farmfast or
                    _G.AutoTrial or
                    _G.KillV4 or
                    _G.AutoRace or
                    _G.RaidPirate == true
             then
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                    local Noclip = Instance.new("BodyVelocity")
                    Noclip.Name = "BodyClip"
                    Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    Noclip.MaxForce = Vector3.new(100000, 100000, 100000)
                    Noclip.Velocity = Vector3.new(0, 0, 0)
                end
            end
        end
    end
)

spawn(
    function()
        game:GetService("RunService").Stepped:Connect(
            function()
                if
                    _G.TeleportToKitsune or _G.OneClick or _G.AutoFactoryByMe or _G.TeleportEmberTemplate or
                        _G.KillTerrorShark or
                        _G.AutoCandy or
                        _G.KillShark or
                        _G.AutoTrial or
                        _G.KillV4 or
                        _G.KillFishCrew or
                        _G.KillPiranha or
                        _G.Zone6 or
                        _G.Farm or
                        _G.AutoVampire or
                        AutoFarmChest or
                        _G.AutoAdvanceDungeon or
                        _G.AutoDoughtBoss or
                        _G.Auto_DungeonMobAura or
                        _G.AutoFarmChest or
                        _G.AutoFactory or
                        _G.AutoFarmBossHallow or
                        _G.AutoFarmSwanGlasses or
                        _G.AutoLongSword or
                        _G.AutoBlackSpikeycoat or
                        _G.AutoElectricClaw or
                        _G.AutoFarmGunMastery or
                        _G.AutoHolyTorch or
                        _G.AutoLawRaid or
                        _G.AutoFarmBoss or
                        _G.AutoTwinHooks or
                        _G.AutoOpenSwanDoor or
                        _G.AutoDragon_Trident or
                        _G.AutoSaber or
                        _G.NOCLIP or
                        _G.AutoFarmFruitMastery or
                        _G.AutoFarmGunMastery or
                        _G.TeleportIsland or
                        _G.Auto_EvoRace or
                        _G.AutoFarmAllMsBypassType or
                        _G.AutoObservationv2 or
                        _G.AutoMusketeerHat or
                        _G.AutoEctoplasm or
                        _G.AutoRengoku or
                        _G.Auto_Rainbow_Haki or
                        _G.AutoObservation or
                        _G.AutoDarkDagger or
                        _G.Safe_Mode or
                        _G.MasteryFruit or
                        _G.AutoBudySword or
                        _G.AutoOderSword or
                        _G.AutoBounty or
                        _G.AutoAllBoss or
                        _G.Auto_Bounty or
                        _G.AutoSharkman or
                        _G.Auto_Mastery_Fruit or
                        _G.Auto_Mastery_Gun or
                        _G.Auto_Dungeon or
                        _G.Auto_Cavender or
                        _G.Auto_Pole or
                        _G.Auto_Kill_Ply or
                        _G.Auto_Factory or
                        _G.AutoSecondSea or
                        _G.TeleportPly or
                        _G.AutoBartilo or
                        _G.Auto_DarkBoss or
                        _G.GrabChest or
                        _G.AutoFarmBounty or
                        _G.Holy_Torch or
                        _G.AutoFarm or
                        _G.Clip or
                        _G.AutoElitehunter or
                        _G.AutoThirdSea or
                        _G.Auto_Bone or
                        _G.Autoheart or
                        _G.Autodoughking or
                        _G.AutoFarmMaterial or
                        _G.AutoNevaSoulGuitar or
                        _G.Auto_Dragon_Trident or
                        _G.Autotushita or
                        _G.Autowaden or
                        _G.Autogay or
                        _G.Autopole or
                        _G.Autosaw or
                        _G.AutoObservationHakiV2 or
                        _G.AutoFarmNearest or
                        _G.AutoCarvender or
                        _G.AutoTwinHook or
                        AutoMobAura or
                        _G.Tweenfruit or
                        _G.TeleportNPC or
                        _G.AutoKai or
                        _G.Leather or
                        _G.Auto_Wing or
                        _G.Umm or
                        _G.Makori_gay or
                        Radioactive or
                        Fish or
                        Gunpowder or
                        Dragon_Scale or
                        Cocoafarm or
                        Scrap or
                        MiniHee or
                        _G.AutoFarmSeabaest or
                        Auto_Cursed_Dual_Katana or
                        _G.AutoFarmMob or
                        _G.AutoMysticIsland or
                        _G.AutoFarmDungeon or
                        _G.AutoRaidPirate or
                        _G.AutoQuestRace or
                        _G.TweenMGear or
                        getgenv().AutoFarm or
                        _G.AutoPlayerHunter or
                        _G.AutoFactory or
                        _G.Namfon or
                        _G.AutoKillElite or
                        _G.AutoSwordMastery or
                        _G.Auto_Seabest or
                        _G.AutoSeaBest or
                        _G.AutoKillTial or
                        _G.Auto_Saber or
                        _G.Position_Spawn or
                        _G.TPB or
                        _G.Farmfast or
                        _G.AutoRace or
                        _G.RaidPirate == true
                 then
                    for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                        end
                    end
                end
            end
        )
    end
)

spawn(
    function()
        game:GetService("RunService").RenderStepped:Connect(
            function()
                if _G.AutoClick or Fastattack then
                    game:GetService "VirtualUser":CaptureController()
                    game:GetService "VirtualUser":Button1Down(Vector2.new(0, 1, 0, 1))
                end
            end
        )
    end
)

function StopTween(target)
    if not target then
        _G.StopTween = true
        wait()
        topos(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
        wait()
        if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
        end
        _G.StopTween = false
        _G.Clip = false
    end
end

local CameraShaker = require(game.ReplicatedStorage.Util.CameraShaker)
CombatFrameworkR = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
y = debug.getupvalues(CombatFrameworkR)[2]
spawn(
    function()
        game:GetService("RunService").RenderStepped:Connect(
            function()
                if _G.FastAttack then
                    if typeof(y) == "table" then
                        pcall(
                            function()
                                CameraShaker:Stop()
                                y.activeController.timeToNextAttack = (math.huge ^ math.huge ^ math.huge)
                                y.activeController.timeToNextAttack = 0
                                y.activeController.hitboxMagnitude = 60
                                y.activeController.active = false
                                y.activeController.timeToNextBlock = 0
                                y.activeController.focusStart = 1655503339.0980349
                                y.activeController.increment = 1
                                y.activeController.blocking = false
                                y.activeController.attacking = false
                                y.activeController.humanoid.AutoRotate = true
                            end
                        )
                    end
                end
            end
        )
    end
)
spawn(
    function()
        game:GetService("RunService").RenderStepped:Connect(
            function()
                if _G.FastAttack == true then
                    game.Players.LocalPlayer.Character.Stun.Value = 0
                    game.Players.LocalPlayer.Character.Busy.Value = false
                end
            end
        )
    end
)

local OrionLib =
    loadstring(game:HttpGet(("https://raw.githubusercontent.com/Nghiavndeptraivcc/Orion-nhu-cut/main/Orion.Source")))()
local Window =
    OrionLib:MakeWindow(
    {
        Name = "Night Hub(Blox Fruit)",
        HidePremium = false,
        IntroText = "Night Hub",
        SaveConfig = true,
        ConfigFolder = "Night Hub"
    }
)

function Notify(h, i)
    OrionLib:MakeNotification(
        {
            Name = "Night Hub",
            Content = h,
            Image = "rbxassetid://15541504459",
            Time = i
        }
    )
end

local G =
    Window:MakeTab(
    {
        Name = "General",
        Icon = "rbxassetid://15541504459",
        PremiumOnly = false
    }
)

local Section =
    G:AddSection(
    {
        Name = "Lets Go"
    }
)

G:AddToggle(
    {
        Name = "Players Aura",
        Default = false,
        Flag = "Players Aura",
        Save = true,
        Callback = function(Value)
            _G.Play = Value
            StopTween(_G.Play)
        end
    }
)

G:AddButton(
    {
        Name = "Next",
        Callback = function()
            NextplySelect = true
            wait()
            NextplySelect = false
        end
    }
)

_G.SelectWeapon = "Melee"
task.spawn(
    function()
        while wait() do
            if _G.SelectWeapon == "Melee" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Melee" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Sword" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Sword" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Gun" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Gun" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Fruit" then
                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Blox Fruit" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            end
        end
    end
)

_G.FastAttack = true
_G.NOCLIP = true

spawn(
    function()
        while wait() do
            pcall(
                function()
                    if _G.Play then
                        for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
                            if v.Name ~= game.Players.LocalPlayer.Name then
                                if
                                    v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and
                                        (v.HumanoidRootPart.Position -
                                            game.Players.LocalPlayer.HumanoidRootPart.Position).Magnitude <= 7000
                                 then
                                    repeat
                                        task.wait()
                                        TargetSelectHunt = v.Humanoid
                                        TietCanh = v.Humanoid.Health
                                        NameTarget = v.Name
                                        TurnOnBuso()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Head.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(80, 80, 80)
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0))
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
                                    until v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or
                                        not v.Parent or
                                        NextplySelect == true
                                    NextplySelect = false
                                    StartCheckTarget = false
                                end
                            end
                        end
                    end
                end
            )
        end
    end
)
spawn(
    function()
        pcall(
            function()
                while wait() do
                    if _G.Play then
                        if TargetSelectHunt ~= nil then
                            if StartCheckTarget then
                                wait(6.5)
                                if
                                    TargetSelectHunt.Health == TargetSelectHunt.MaxHealth or
                                        TargetSelectHunt.Health >= plyselecthunthelpold
                                 then
                                    NextplySelect = true
                                    TargetSelectHunt = nil
                                end
                            end
                        end
                    end
                end
            end
        )
    end
)



